{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fswiss\fcharset0 Helvetica-Oblique;\f4\fnil\fcharset0 LucidaGrande;\f5\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red21\green23\blue25;\red3\green38\blue0;\red224\green245\blue224;
\red42\green95\blue222;\red20\green46\blue55;\red234\green248\blue252;\red244\green245\blue246;\red209\green213\blue218;
\red0\green0\blue0;\red0\green0\blue141;\red244\green246\blue249;\red43\green44\blue39;\red203\green35\blue57;
\red217\green0\blue89;\red20\green151\blue2;\red46\green158\blue154;\red60\green43\blue1;\red255\green247\blue224;
\red253\green173\blue9;\red55\green55\blue56;\red252\green252\blue254;\red135\green136\blue117;}
{\*\expandedcolortbl;;\cssrgb\c10980\c11765\c12941;\cssrgb\c0\c19216\c0;\cssrgb\c90196\c96471\c90196;
\cssrgb\c20784\c47059\c89804;\cssrgb\c9804\c23529\c27843;\cssrgb\c93333\c97647\c99216;\cssrgb\c96471\c96863\c97255;\cssrgb\c85490\c86667\c88235;
\cssrgb\c0\c0\c0\c3137;\cssrgb\c0\c0\c62353;\cssrgb\c96471\c97255\c98039;\cssrgb\c22353\c22745\c20392;\cssrgb\c84314\c22745\c28627;
\cssrgb\c89020\c6667\c42353;\cssrgb\c0\c64314\c0\c14902;\cssrgb\c21176\c67451\c66667;\cssrgb\c30196\c21961\c0;\cssrgb\c100000\c97255\c90196;
\cssrgb\c100000\c72941\c0\c14902;\cssrgb\c27843\c27843\c28235;\cssrgb\c99216\c99216\c99608;\cssrgb\c60000\c60000\c53333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa500\partightenfactor0

\f0\b\fs96 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Send Swap Transaction\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 Transaction sending can be very simple but optimizing for transaction landing can be challenging. This is critical in periods of network congestion when many users and especially bots are competing for block space to have their transactions processed.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf3 \cb4 \strokec3 IMPROVE TRANSACTION LANDING TIP\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf3 \cb4 By using Jupiter Swap API, you can enable Dynamic Slippage, Priority Fee estimation and Compute Unit estimation, all supported on our backend and served directly to you through our API.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 \strokec2 Let\'92s Get Started\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 In this guide, we will pick up from where\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/get-quote"}}{\fldrslt 
\f0\b \cf5 \ul \ulc5 \strokec5 Get Quote}}\'a0and\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/build-swap-transaction"}}{\fldrslt 
\f0\b \cf5 \ul \ulc5 \strokec5 Build Swap Transaction}}\'a0guide has left off.\
If you have not set up your environment to use the necessary libraries, the RPC connection to the network and successfully get a quote from the Quote API, please start at\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/environment-setup"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Environment Setup}}\'a0or\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/get-quote"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 get quote}}.\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 Prepare Transaction\
\pard\pardeftab720\partightenfactor0

\fs28 \cf6 \cb7 \strokec6 WHO IS THE SIGNER?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf6 \cb7 The most important part of this step is to sign the transaction. For the sake of the guide, you will be using the file system wallet you have set up to sign and send yourself.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb7 However, for other production scenarios such as building your own program or app on top of the Swap API, you will need the user to be the signer which is often through a third party wallet provider, so do account for it.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \strokec2 In the previous guide, we are able to get the\'a0
\f2\fs28\fsmilli14400 \cb8 swapTransaction
\f1\fs32 \cb1 \'a0from the Swap API response. However, you will need to reformat it to sign and send the transaction, here are the formats to note of.\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3101\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth12558\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\f0\b\fs24 \cf2 Formats\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf2 Description\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3101\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth12558\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f1\b0 \cf2 Serialized Uint8array format\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 The correct format to send to the network.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat10 \clwWidth3101\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clcbpat10 \clwWidth12558\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 Serialized base64 format\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 This is a text encoding of the Uint8array data, meant for transport like our Swap API or storage. You should not sign this directly.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3101\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth12558\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 Deserialized format\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 This is the human-readable, object-like format before serialization. This is the state you will sign the transaction.\cell \lastrow\row
\pard\pardeftab720\sa400\partightenfactor0

\fs32 \cf2 Here's the code to deserialize and sign, then serialize.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\fs28\fsmilli14400 \cf2 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 swapTransaction
\f1\fs32 \cb1 \'a0from the Swap API is a serialized transaction in the\'a0
\f0\b base64 format
\f1\b0 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Convert it to\'a0
\f0\b Uint8array (binary buffer) format
\f1\b0 .\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Deserialize it to a\'a0
\f0\b VersionedTransaction
\f1\b0 \'a0object to sign.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Finally, convert it back to\'a0
\f0\b Uint8array
\f1\b0 \'a0format to send the transaction.\
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  transactionBase64 = swapResponse.swapTransaction\cb1 \
\cf11 \cb12 \strokec11 const\cf13 \strokec13  transaction = VersionedTransaction.\cf14 \strokec14 deserialize\cf13 \strokec13 (Buffer.\cf11 \strokec11 from\cf13 \strokec13 (transactionBase64, \cf15 \strokec15 'base64'\cf13 \strokec13 ));\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12 console.\cf14 \strokec14 log\cf13 \strokec13 (transaction);\cb1 \
\
\cb12 transaction.\cf14 \strokec14 sign\cf13 \strokec13 ([wallet.payer]);\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb12 \strokec11 const\cf13 \strokec13  transactionBinary = transaction.\cf14 \strokec14 serialize\cf13 \strokec13 ();\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12 console.\cf14 \strokec14 log\cf13 \strokec13 (transactionBinary);\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf3 \cb4 \strokec3 BLOCKHASH VALIDITY\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf3 \cb4 If you look at the response of\'a0
\f2\fs28\fsmilli14400 \cb16 console.log(transaction);
\f1\fs32 \cb4 , you can see that our backend has already handled the blockhash and last valid block height in your transaction.\cb1 \
\cb4 The validity of a blockhash typically lasts for 150 slots, but you can manipulate this to reduce the validity of a transaction, resulting in faster failures which could be useful in certain scenarios.\cb1 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://solana.com/docs/advanced/confirmation#transaction-expiration"}}{\fldrslt \cf3 \cb4 \ul \ulc3 Read more about transaction expiry here.}}\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 \strokec2 Send Transaction\
\pard\pardeftab720\sa400\partightenfactor0

\fs48 \cf2 Transaction Sending Options\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 Finally, there are a 2\'a0{\field{\*\fldinst{HYPERLINK "https://solana.com/docs/advanced/retry#an-in-depth-look-at-sendtransaction"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 transaction sending options}}\'a0that we should take note of. Depending on your use case, these options can make a big difference to you or your users. For example, if you are using the Swap API as a payment solution, setting higher\'a0
\f2\fs28\fsmilli14400 \cb8 maxRetries
\f1\fs32 \cb1 \'a0allows the transaction to have more retries as it is not as critical compared to a bot that needs to catch fast moving markets.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf6 \cb7 \strokec6 Transaction Sending Options
\f1\b0 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  signature = \cf11 \strokec11 await\cf13 \strokec13  connection.\cf14 \strokec14 sendRawTransaction\cf13 \strokec13 (transactionBinary, \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12     \cf17 \strokec17 maxRetries\cf13 \strokec13 : \cf17 \strokec17 2\cf13 \strokec13 ,\cb1 \
\cb12     \cf17 \strokec17 skipPreflight\cf13 \strokec13 : \cf17 \strokec17 true\cf13 \cb1 \strokec13 \
\cb12 \});\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs48 \cf2 \strokec2 Transaction Confirmation\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 In addition, after sending the transaction, it is always a best practice to check the transaction confirmation state, and if not, log the error for debugging or communicating with your users on your interface.\'a0{\field{\*\fldinst{HYPERLINK "https://solana.com/docs/advanced/confirmation#transaction-confirmation-tips"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Read more about transaction confirmation tips here.}}\
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  confirmation = \cf11 \strokec11 await\cf13 \strokec13  connection.\cf14 \strokec14 confirmTransaction\cf13 \strokec13 (\{signature,\}, \cf15 \strokec15 "finalized"\cf13 \strokec13 );\cb1 \
\
\cf11 \cb12 \strokec11 if\cf13 \strokec13  (confirmation.value.err) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12     \cf11 \strokec11 throw\cf13 \strokec13  \cf11 \strokec11 new\cf13 \strokec13  Error(\cf15 \strokec15 `Transaction failed: \cf13 \strokec13 $\{JSON.\cf14 \strokec14 stringify\cf13 \strokec13 (confirmation.value.err)\}\cf15 \strokec15 \\nhttps://solscan.io/tx/\cf13 \strokec13 $\{signature\}\cf15 \strokec15 /`\cf13 \strokec13 );\cb1 \
\cb12 \} \cf11 \strokec11 else\cf13 \strokec13  console.\cf14 \strokec14 log\cf13 \strokec13 (\cf15 \strokec15 `Transaction successful: https://solscan.io/tx/\cf13 \strokec13 $\{signature\}\cf15 \strokec15 /`\cf13 \strokec13 );\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 \strokec2 Swap Transaction Executed!\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 If you have followed the guides step by step without missing a beat, your transaction\'a0
\f3\i should
\f1\i0 \'a0theoretically land and you can view the link in console log to see the\'a0{\field{\*\fldinst{HYPERLINK "https://solscan.io/tx/zEWGsd5tSyxUdsTn27hUzaJBadQSiFxF2X1CxVdQzdtgc3BpqyDPf5VQCFUScidhHJP5PchY33oJ3tZJLK5KXrf"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 transaction}}.\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 Oh? Transaction Not Landing?\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 As the Solana network grew and increased in activity over the years, it has become more challenging to land transactions. There are several factors that can drastically affect the success of your transaction:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Setting competitive priority fee\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Setting accurate amount of compute units\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Managing slippage effectively\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Broadcasting transaction efficiently\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Other tips\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs48 \cf2 How Jupiter Estimates Priority Fee?\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 You can pass in\'a0
\f2\fs28\fsmilli14400 \cb8 prioritizationFeeLamports
\f1\fs32 \cb1 \'a0to Swap API where our backend will estimate the Priority Fee for you.\
We are using\'a0{\field{\*\fldinst{HYPERLINK "https://docs.triton.one/chains/solana/improved-priority-fees-api"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Triton\'92s\'a0
\f2\fs28\fsmilli14400 \cb8 getRecentPrioritizationFees}}\'a0to estimate using the local fee market in writable accounts of the transaction (comparing to the global fee market), across the past 20 slots and categorizing them into different percentiles.\
\pard\pardeftab720\sa400\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://solana.com/docs/core/fees#prioritization-fees"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Read more about Priority Fee here.}}\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2858\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth12801\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0

\f0\b\fs24 \cf2 Parameters\cell 
\pard\intbl\itap1\pardeftab720\qc\partightenfactor0
\cf2 Description\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2858\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth12801\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f2\b0\fs28\fsmilli14400 \cf2 \cb8 maxLamports
\f1\fs24 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 A maximum cap applied if the estimated priority fee is too high. This is helpful when you have users using your application and can be a safety measure to prevent overpaying.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat10 \clwWidth2858\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clcbpat10 \clwWidth12801\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf2 \cb8 global
\f1\fs24 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 A boolean to choose between using a global or local fee market to estimate. If\'a0
\f2\fs28\fsmilli14400 \cb8 global
\f1\fs24 \cb1 \'a0is set to\'a0
\f2\fs28\fsmilli14400 \cb8 false
\f1\fs24 \cb1 , the estimation focuses on fees relevant to the\'a0
\f0\b writable accounts
\f1\b0 \'a0involved in the instruction.\cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth2858\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth12801\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrs\brdrw20\brdrcf9 \clbrdrl\brdrs\brdrw20\brdrcf9 \clbrdrb\brdrs\brdrw20\brdrcf9 \clbrdrr\brdrs\brdrw20\brdrcf9 \clpadt240 \clpadl240 \clpadb240 \clpadr240 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf2 \cb8 priorityLevel
\f1\fs24 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 A setting to choose between the different percentile levels. Higher percentile will have better transaction landing but also incur higher fees.\
\
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f2\fs28\fsmilli14400 \cf2 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 medium
\f1\fs24 \cb1 : 25th percentile\
\ls3\ilvl0
\f2\fs28\fsmilli14400 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 high
\f1\fs24 \cb1 : 50th percentile\
\ls3\ilvl0
\f2\fs28\fsmilli14400 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 veryHigh
\f1\fs24 \cb1 : 75th percentile\cell \lastrow\row
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  swapResponse = \cf11 \strokec11 await\cf13 \strokec13  (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12   \cf11 \strokec11 await\cf13 \strokec13  \cf14 \strokec14 fetch\cf13 \strokec13 (\cf15 \strokec15 'https://lite-api.jup.ag/swap/v1/swap'\cf13 \strokec13 , \{\cb1 \
\cb12       \cf17 \strokec17 method\cf13 \strokec13 : \cf15 \strokec15 'POST'\cf13 \strokec13 ,\cb1 \
\cb12       \cf17 \strokec17 headers\cf13 \strokec13 : \{\cb1 \
\cb12       \cf17 \strokec17 'Content-Type'\cf13 \strokec13 : \cf15 \strokec15 'application/json'\cf13 \cb1 \strokec13 \
\cb12       \},\cb1 \
\cb12       \cf17 \strokec17 body\cf13 \strokec13 : JSON.\cf14 \strokec14 stringify\cf13 \strokec13 (\{\cb1 \
\cb12           quoteResponse,\cb1 \
\cb12           \cf17 \strokec17 userPublicKey\cf13 \strokec13 : wallet.publicKey.\cf14 \strokec14 toBase58\cf13 \strokec13 (),\cb1 \
\cb12           \cf17 \strokec17 prioritizationFeeLamports\cf13 \strokec13 : \{\cb1 \
\cb12               \cf17 \strokec17 priorityLevelWithMaxLamports\cf13 \strokec13 : \{\cb1 \
\cb12                   \cf17 \strokec17 maxLamports\cf13 \strokec13 : \cf17 \strokec17 10000000\cf13 \strokec13 ,\cb1 \
\cb12                   \cf17 \strokec17 global\cf13 \strokec13 : \cf17 \strokec17 false\cf13 \strokec13 ,\cb1 \
\cb12                   \cf17 \strokec17 priorityLevel\cf13 \strokec13 : \cf15 \strokec15 "veryHigh"\cf13 \cb1 \strokec13 \
\cb12               \}\cb1 \
\cb12           \}\cb1 \
\cb12       \})\cb1 \
\cb12   \})\cb1 \
\cb12 ).\cf14 \strokec14 json\cf13 \strokec13 ();\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs48 \cf2 \strokec2 How Jupiter Estimates Compute Unit Limit?\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 You can pass in\'a0
\f2\fs28\fsmilli14400 \cb8 dynamicComputeUnitLimit
\f1\fs32 \cb1 \'a0to Swap API where our backend will estimate the Compute Unit Limit for you.\
When\'a0
\f2\fs28\fsmilli14400 \cb8 true
\f1\fs32 \cb1 , it allows the transaction to utilize a dynamic compute unit rather than using incorrect compute units which can be detrimental to transaction prioritization. Additionally, the amount of compute unit used and the compute unit limit requested to be used are correlated to the amount of priority fees you pay.\
\pard\pardeftab720\sa400\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://solana.com/docs/core/fees#compute-budget"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Read more about Compute Budget, Compute Unit, etc here.}}\
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  swapTransaction = \cf11 \strokec11 await\cf13 \strokec13  (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12   \cf11 \strokec11 await\cf13 \strokec13  \cf14 \strokec14 fetch\cf13 \strokec13 (\cf15 \strokec15 'https://lite-api.jup.ag/swap/v1/swap'\cf13 \strokec13 , \{\cb1 \
\cb12     \cf17 \strokec17 method\cf13 \strokec13 : \cf15 \strokec15 'POST'\cf13 \strokec13 ,\cb1 \
\cb12     \cf17 \strokec17 headers\cf13 \strokec13 : \{\cb1 \
\cb12       \cf17 \strokec17 'Content-Type'\cf13 \strokec13 : \cf15 \strokec15 'application/json'\cf13 \cb1 \strokec13 \
\cb12     \},\cb1 \
\cb12     \cf17 \strokec17 body\cf13 \strokec13 : JSON.\cf14 \strokec14 stringify\cf13 \strokec13 (\{\cb1 \
\cb12       quoteResponse,\cb1 \
\cb12       \cf17 \strokec17 userPublicKey\cf13 \strokec13 : wallet.publicKey.\cf14 \strokec14 toBase58\cf13 \strokec13 (),\cb1 \
\cb12       \cf17 \strokec17 dynamicComputeUnitLimit\cf13 \strokec13 : \cf17 \strokec17 true\cf13 \cb1 \strokec13 \
\cb12     \})\cb1 \
\cb12   \})\cb1 \
\cb12 ).\cf14 \strokec14 json\cf13 \strokec13 ();\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs48 \cf2 \strokec2 How Jupiter Estimates Slippage?\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 Apart from the static\'a0
\f2\fs28\fsmilli14400 \cb8 slippageBps
\f1\fs32 \cb1 \'a0parameter, Jupiter has iterated on different designs to estimate slippage better.\
You can pass in\'a0
\f2\fs28\fsmilli14400 \cb8 dynamicSlippage=true
\f1\fs32 \cb1 \'a0to Swap API where our backend will estimate a slippage value by simulating the swap transaction closer to execution and calculate an optimal value based on the token category, historical swap's slippage data and other heuristics.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf6 \cb7 \strokec6 INFO\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf6 \cb7 The Dynamic Slippage implementation on the Swap API is different from the Real Time Slippage Estimator (RTSE) on the Ultra API.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb7 To use RTSE, you will need to use the Ultra API.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf18 \cb19 \strokec18 WARNING\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf18 \cb19 To use Dynamic Slippage, you will need to pass in\'a0
\f2\fs28\fsmilli14400 \cb20 dynamicSlippage=true
\f1\fs32 \cb19 \'a0to both the\'a0
\f2\fs28\fsmilli14400 \cb20 /swap/v1/quote
\f1\fs32 \cb19 \'a0and\'a0
\f2\fs28\fsmilli14400 \cb20 /swap/v1/swap
\f1\fs32 \cb19 \'a0endpoints.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  quoteResponse = \cf11 \strokec11 await\cf13 \strokec13  (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12   \cf11 \strokec11 await\cf13 \strokec13  \cf14 \strokec14 fetch\cf13 \strokec13 (\cb1 \
\cb12     \cf15 \strokec15 'https://lite-api.jup.ag/swap/v1/quote?inputMint=So11111111111111111111111111111111111111112&outputMint=EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v&amount=100000000&slippageBps=50&restrictIntermediateTokens=true&dynamicSlippage=true'\cf13 \cb1 \strokec13 \
\cb12   )\cb1 \
\cb12 ).\cf14 \strokec14 json\cf13 \strokec13 ();\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb12 \strokec11 const\cf13 \strokec13  swapTransaction = \cf11 \strokec11 await\cf13 \strokec13  (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12   \cf11 \strokec11 await\cf13 \strokec13  \cf14 \strokec14 fetch\cf13 \strokec13 (\cf15 \strokec15 'https://lite-api.jup.ag/swap/v1/swap'\cf13 \strokec13 , \{\cb1 \
\cb12     \cf17 \strokec17 method\cf13 \strokec13 : \cf15 \strokec15 'POST'\cf13 \strokec13 ,\cb1 \
\cb12     \cf17 \strokec17 headers\cf13 \strokec13 : \{\cb1 \
\cb12       \cf17 \strokec17 'Content-Type'\cf13 \strokec13 : \cf15 \strokec15 'application/json'\cf13 \cb1 \strokec13 \
\cb12     \},\cb1 \
\cb12     \cf17 \strokec17 body\cf13 \strokec13 : JSON.\cf14 \strokec14 stringify\cf13 \strokec13 (\{\cb1 \
\cb12       quoteResponse,\cb1 \
\cb12       \cf17 \strokec17 userPublicKey\cf13 \strokec13 : wallet.publicKey.\cf14 \strokec14 toBase58\cf13 \strokec13 (),\cb1 \
\cb12       \cf17 \strokec17 dynamicSlippage\cf13 \strokec13 : \cf17 \strokec17 true\cf13 \strokec13 ,\cb1 \
\cb12     \})\cb1 \
\cb12   \})\cb1 \
\cb12 ).\cf14 \strokec14 json\cf13 \strokec13 ();\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs48 \cf2 \strokec2 How Jupiter Broadcast Transactions?\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 Transaction broadcasting is the process of submitting a signed transaction to the network so that validators can verify, process, and include it in a block.\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b \cf2 Broadcasting Through RPCs\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0 \cf2 After you\'92ve built and signed your transaction, the signed transaction is serialized into a binary format and sent to the network via a Solana RPC node. The RPC node will verify and relay the transaction to the leader validator responsible for producing the next block.\
\pard\pardeftab720\sa400\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://solana.com/docs/advanced/retry#how-rpc-nodes-broadcast-transactions"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Read more about how RPC nodes broadcast transactions.}}\
This is the most typical method to send transactions to the network to get executed. It is simple but you need to make sure the transactions are:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Send in the serialized transaction format.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use fresh blockhash and last valid blockheight.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use optimal amount of priority fees and compute unit limit.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Free of error.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Utilize retries.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Configure your RPCs\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Optional but you can send your transaction to a staked RPC endpoint also known as\'a0{\field{\*\fldinst{HYPERLINK "https://solana.com/developers/guides/advanced/stake-weighted-qos"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 Stake-Weighted Quality of Service (SWQoS)}}.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used dedicated RPC services versus free or shared, depending on how critical your usage is.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Propagate to multiple RPC rather than reliant on one.\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b \cf2 Broadcasting Through Jito\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0 \cf2 To include Jito Tips in your Swap transaction, you can do specify in the Swap API parameters. However, please take note of these when sending your transaction to Jito and\'a0{\field{\*\fldinst{HYPERLINK "https://docs.jito.wtf/"}}{\fldrslt \cf5 \ul \ulc5 \strokec5 you can find thsese information in their documentation}}:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You need to submit to a Jito RPC endpoint for it to work.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You need to send an appropriate amount of Jito Tip to be included to be processed.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf21 \cb22 \strokec21 MORE ABOUT JITO\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf21 \cb22 You can leverage\'a0{\field{\*\fldinst{HYPERLINK "https://www.jito.wtf/"}}{\fldrslt \ul Jito}}\'a0to send transactions via tips for faster inclusion and better outcomes. Similar to Priority Fees, Jito Tips incentivize the inclusion of transaction bundles during block production, enhancing users' chances of securing critical transactions in competitive scenarios.\cb1 \
\cb22 Additionally, Jito enables bundling transactions to ensure they execute together or not at all, helping protect against front-running and other MEV risks through \'93revert protection\'94 if any part of the sequence fails, all while reducing transaction latency for timely execution.\cb1 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.jito.wtf/lowlatencytxnsend/#system-overview"}}{\fldrslt \cf21 \cb22 \ul \ulc21 Read more about how Jito works and other details here.}}\
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf11 \cb12 \strokec11 const\cf13 \strokec13  swapTransaction = \cf11 \strokec11 await\cf13 \strokec13  (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb12   \cf11 \strokec11 await\cf13 \strokec13  \cf14 \strokec14 fetch\cf13 \strokec13 (\cf15 \strokec15 'https://lite-api.jup.ag/swap/v1/swap'\cf13 \strokec13 , \{\cb1 \
\cb12     \cf17 \strokec17 method\cf13 \strokec13 : \cf15 \strokec15 'POST'\cf13 \strokec13 ,\cb1 \
\cb12     \cf17 \strokec17 headers\cf13 \strokec13 : \{\cb1 \
\cb12       \cf17 \strokec17 'Content-Type'\cf13 \strokec13 : \cf15 \strokec15 'application/json'\cf13 \cb1 \strokec13 \
\cb12     \},\cb1 \
\cb12     \cf17 \strokec17 body\cf13 \strokec13 : JSON.\cf14 \strokec14 stringify\cf13 \strokec13 (\{\cb1 \
\cb12       quoteResponse,\cb1 \
\cb12       \cf17 \strokec17 userPublicKey\cf13 \strokec13 : wallet.publicKey.\cf14 \strokec14 toBase58\cf13 \strokec13 (),\cb1 \
\cb12       \cf17 \strokec17 prioritizationFeeLamports\cf13 \strokec13 : \{\cb1 \
\cb12         \cf17 \strokec17 jitoTipLamports\cf13 \strokec13 : \cf17 \strokec17 1000000\cf13 \strokec13  
\f5\i \cf23 \strokec23 // note that this is FIXED LAMPORTS not a max cap
\f2\i0 \cf13 \cb1 \strokec13 \
\cb12       \}\cb1 \
\cb12     \})\cb1 \
\cb12   \})\cb1 \
\cb12 ).\cf14 \strokec14 json\cf13 \strokec13 ();\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf13 \
\
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \strokec2 \
}