{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red21\green23\blue25;\red3\green38\blue0;\red224\green245\blue224;
\red20\green151\blue2;\red42\green95\blue222;\red55\green55\blue56;\red252\green252\blue254;\red230\green232\blue236;
\red0\green0\blue141;\red244\green246\blue249;\red43\green44\blue39;\red203\green35\blue57;\red217\green0\blue89;
\red46\green158\blue154;\red135\green136\blue117;}
{\*\expandedcolortbl;;\cssrgb\c10980\c11765\c12941;\cssrgb\c0\c19216\c0;\cssrgb\c90196\c96471\c90196;
\cssrgb\c0\c64314\c0\c14902;\cssrgb\c20784\c47059\c89804;\cssrgb\c27843\c27843\c28235;\cssrgb\c99216\c99216\c99608;\cssrgb\c92157\c92941\c94118\c14902;
\cssrgb\c0\c0\c62353;\cssrgb\c96471\c97255\c98039;\cssrgb\c22353\c22745\c20392;\cssrgb\c84314\c22745\c28627;\cssrgb\c89020\c6667\c42353;
\cssrgb\c21176\c67451\c66667;\cssrgb\c60000\c60000\c53333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa500\partightenfactor0

\f0\b\fs96 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build Swap Transaction\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 The Swap API is one of the ways for you to interact with the Jupiter Swap Aggregator program. Before you send a transaction to the network, you will need to build the transaction that defines the instructions to execute and accounts to read/write to.\
It can be complex to handle this yourself, but good news! Most of our APIs and SDKs just handles it for you, so you get a response with the transaction to be prepared and sent to the network.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf3 \cb4 \strokec3 USE SWAP API TO HANDLE IT FOR YOU OR ...\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf3 \cb4 If you are looking to interact with the Jupiter Swap Aggregator program in a different way, check out the other guides:\cb1 \
\pard\pardeftab720\sa320\partightenfactor0

\f0\b \cf3 \cb4 Swap Instructions\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0 \cf3 \cb4 To compose with instructions and build your own transaction,\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/build-swap-transaction#build-your-own-transaction-with-instructions"}}{\fldrslt \ul read how to use the\'a0
\f2\fs28\fsmilli14400 \cb5 /swap-instructions
\f1\fs32 \cb4 \'a0in this section}}.\cb1 \
\pard\pardeftab720\sa320\partightenfactor0

\f0\b \cf3 \cb4 Flash Fill or Cross Program Invocation (CPI)\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf3 \cb4 To interact with your own Solana program,\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/build-swap-transaction#build-your-own-transaction-with-flash-fill-or-cpi"}}{\fldrslt \ul read how to use the\'a0
\f0\b Flash Fill method
\f1\b0 \'a0or\'a0
\f0\b CPI
\f1\b0 \'a0in this section}}.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 \strokec2 Let\'92s Get Started\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 In this guide, we will pick up from where\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/get-quote"}}{\fldrslt 
\f0\b \cf6 \ul \ulc6 \strokec6 Get Quote}}\'a0guide has left off.\
If you have not set up your environment to use the necessary libraries, the RPC connection to the network and successfully get a quote from the Quote API, please start at\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/environment-setup"}}{\fldrslt \cf6 \ul \ulc6 \strokec6 Environment Setup}}\'a0or\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/get-quote"}}{\fldrslt \cf6 \ul \ulc6 \strokec6 get quote}}.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf3 \cb4 \strokec3 API REFERENCE\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf3 \cb4 To fully utilize the Swap API, check out the\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/api/swap-api/swap"}}{\fldrslt \ul Swap API or Swap Instructions Reference}}.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 \strokec2 Swap API\
\pard\pardeftab720\partightenfactor0

\fs28 \cf7 \cb8 \strokec7 NOTE\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf7 \cb8 Base URL:\'a0
\f2\fs28\fsmilli14400 \cb9 https://lite-api.jup.ag/swap/v1/swap
\f1\fs32 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 For higher rate limits,\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/api-setup"}}{\fldrslt \ul refer to the API Key Setup doc}}.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \strokec2 From the previous guide on getting a quote, now using the quote response and your wallet, you can receive a\'a0
\f0\b serialized swap transaction
\f1\b0 \'a0that needs to be prepared and signed before sending to the network.\
\pard\pardeftab720\sa400\partightenfactor0

\f0\b\fs64 \cf2 Get Serialized Transaction\
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf2 Using the root URL and parameters to pass in, it is as simple as the example code below!\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf3 \cb4 \strokec3 OPTIMIZING FOR TRANSACTION LANDING IS SUPER SUPER IMPORTANT!\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f1\b0\fs32 \cf3 \cb4 This code block includes additional parameters that our Swap API supports, such as estimating compute units, priority fees and slippage, to optimize for transaction landing.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf3 \cb4 To understand how these parameters help, the next step,\'a0{\field{\*\fldinst{HYPERLINK "https://dev.jup.ag/docs/swap-api/send-swap-transaction"}}{\fldrslt \ul Send Swap Transaction guide}}\'a0will discuss them.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf10 \cb11 \strokec10 const\cf12 \strokec12  swapResponse = \cf10 \strokec10 await\cf12 \strokec12  (\cb1 \
\cf10 \cb11 \strokec10 await\cf12 \strokec12  \cf13 \strokec13 fetch\cf12 \strokec12 (\cf14 \strokec14 'https://lite-api.jup.ag/swap/v1/swap'\cf12 \strokec12 , \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf12 \cb11     \cf15 \strokec15 method\cf12 \strokec12 : \cf14 \strokec14 'POST'\cf12 \strokec12 ,\cb1 \
\cb11     \cf15 \strokec15 headers\cf12 \strokec12 : \{\cb1 \
\cb11     \cf15 \strokec15 'Content-Type'\cf12 \strokec12 : \cf14 \strokec14 'application/json'\cf12 \strokec12 ,\cb1 \
\cb11     \},\cb1 \
\cb11     \cf15 \strokec15 body\cf12 \strokec12 : JSON.\cf13 \strokec13 stringify\cf12 \strokec12 (\{\cb1 \
\cb11     quoteResponse,\cb1 \
\cb11     \cf15 \strokec15 userPublicKey\cf12 \strokec12 : wallet.publicKey.\cf13 \strokec13 toString\cf12 \strokec12 (),\cb1 \
\cb11     \cb1 \
\cb11     
\f3\i \cf16 \strokec16 // ADDITIONAL PARAMETERS TO OPTIMIZE FOR TRANSACTION LANDING
\f2\i0 \cf12 \cb1 \strokec12 \
\cb11     
\f3\i \cf16 \strokec16 // See next guide to optimize for transaction landing
\f2\i0 \cf12 \cb1 \strokec12 \
\cb11     \cf15 \strokec15 dynamicComputeUnitLimit\cf12 \strokec12 : \cf15 \strokec15 true\cf12 \strokec12 ,\cb1 \
\cb11     \cf15 \strokec15 dynamicSlippage\cf12 \strokec12 : \cf15 \strokec15 true\cf12 \strokec12 ,\cb1 \
\cb11     \cf15 \strokec15 prioritizationFeeLamports\cf12 \strokec12 : \{\cb1 \
\cb11           \cf15 \strokec15 priorityLevelWithMaxLamports\cf12 \strokec12 : \{\cb1 \
\cb11             \cf15 \strokec15 maxLamports\cf12 \strokec12 : \cf15 \strokec15 1000000\cf12 \strokec12 ,\cb1 \
\cb11             \cf15 \strokec15 priorityLevel\cf12 \strokec12 : \cf14 \strokec14 "veryHigh"\cf12 \cb1 \strokec12 \
\cb11           \}\cb1 \
\cb11         \}\cb1 \
\cb11     \})\cb1 \
\cb11 \})\cb1 \
\cb11 ).\cf13 \strokec13 json\cf12 \strokec12 ();\cb1 \
\
\cb11 console.\cf13 \strokec13 log\cf12 \strokec12 (swapResponse);\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs22 \cf12 \
\pard\pardeftab720\sa400\partightenfactor0

\fs32 \cf2 \strokec2 From the above example, you should see this response.\
\pard\pardeftab720\partightenfactor0

\f2\fs28\fsmilli14400 \cf12 \cb11 \strokec12 \{\cb1 \
\cb11     swapTransaction: 'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAGDkS+3LuGTbs......+/oD9qb31dH6i0QZ2IHELXUX3Y1YeW79p9Stkqk12z4yvZFJiQ4GCQwLBwYQBgUEDggNTQ==',\cb1 \
\cb11     lastValidBlockHeight: \cf15 \strokec15 279632475\cf12 \strokec12 ,\cb1 \
\cb11     prioritizationFeeLamports: \cf15 \strokec15 9999\cf12 \strokec12 ,\cb1 \
\cb11     computeUnitLimit: \cf15 \strokec15 388876\cf12 \strokec12 ,\cb1 \
\cb11     prioritizationType: \{\cb1 \
\cb11         computeBudget: \{ \cb1 \
\cb11             microLamports: \cf15 \strokec15 25715\cf12 \strokec12 ,\cb1 \
\cb11             estimatedMicroLamports: \cf15 \strokec15 785154\cf12 \strokec12  \cb1 \
\cb11         \}\cb1 \
\cb11     \},\cb1 \
\cb11     dynamicSlippageReport: \{\cb1 \
\cb11         slippageBps: \cf15 \strokec15 50\cf12 \strokec12 ,\cb1 \
\cb11         otherAmount: \cf15 \strokec15 20612318\cf12 \strokec12 ,\cb1 \
\cb11         simulatedIncurredSlippageBps: \cf15 \strokec15 -18\cf12 \strokec12 ,\cb1 \
\cb11         amplificationRatio: '\cf15 \strokec15 1.5\cf12 \strokec12 ',\cb1 \
\cb11         categoryName: 'lst',\cb1 \
\cb11         heuristicMaxSlippageBps: \cf15 \strokec15 100\cf12 \cb1 \strokec12 \
\cb11     \},\cb1 \
\cb11     simulationError: \cf10 \strokec10 null\cf12 \cb1 \strokec12 \
\cb11 \}\cb1 \
}